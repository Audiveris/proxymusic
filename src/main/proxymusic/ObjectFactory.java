//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.01.13 at 10:26:09 PM CET 
//


package proxymusic;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the proxymusic package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: proxymusic
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Software }
     * 
     */
    public Software createSoftware() {
        return new Software();
    }

    /**
     * Create an instance of {@link Opus }
     * 
     */
    public Opus createOpus() {
        return new Opus();
    }

    /**
     * Create an instance of {@link Pppppp }
     * 
     */
    public Pppppp createPppppp() {
        return new Pppppp();
    }

    /**
     * Create an instance of {@link Suffix }
     * 
     */
    public Suffix createSuffix() {
        return new Suffix();
    }

    /**
     * Create an instance of {@link SnapPizzicato }
     * 
     */
    public SnapPizzicato createSnapPizzicato() {
        return new SnapPizzicato();
    }

    /**
     * Create an instance of {@link PartName }
     * 
     */
    public PartName createPartName() {
        return new PartName();
    }

    /**
     * Create an instance of {@link Accidental }
     * 
     */
    public Accidental createAccidental() {
        return new Accidental();
    }

    /**
     * Create an instance of {@link Ornaments }
     * 
     */
    public Ornaments createOrnaments() {
        return new Ornaments();
    }

    /**
     * Create an instance of {@link Harmonic }
     * 
     */
    public Harmonic createHarmonic() {
        return new Harmonic();
    }

    /**
     * Create an instance of {@link Sfpp }
     * 
     */
    public Sfpp createSfpp() {
        return new Sfpp();
    }

    /**
     * Create an instance of {@link Fffff }
     * 
     */
    public Fffff createFffff() {
        return new Fffff();
    }

    /**
     * Create an instance of {@link DelayedTurn }
     * 
     */
    public DelayedTurn createDelayedTurn() {
        return new DelayedTurn();
    }

    /**
     * Create an instance of {@link Footnote }
     * 
     */
    public Footnote createFootnote() {
        return new Footnote();
    }

    /**
     * Create an instance of {@link Harmony }
     * 
     */
    public Harmony createHarmony() {
        return new Harmony();
    }

    /**
     * Create an instance of {@link Attributes }
     * 
     */
    public Attributes createAttributes() {
        return new Attributes();
    }

    /**
     * Create an instance of {@link Wedge }
     * 
     */
    public Wedge createWedge() {
        return new Wedge();
    }

    /**
     * Create an instance of {@link InstrumentAbbreviation }
     * 
     */
    public InstrumentAbbreviation createInstrumentAbbreviation() {
        return new InstrumentAbbreviation();
    }

    /**
     * Create an instance of {@link Shake }
     * 
     */
    public Shake createShake() {
        return new Shake();
    }

    /**
     * Create an instance of {@link Transpose }
     * 
     */
    public Transpose createTranspose() {
        return new Transpose();
    }

    /**
     * Create an instance of {@link Fifths }
     * 
     */
    public Fifths createFifths() {
        return new Fifths();
    }

    /**
     * Create an instance of {@link Ppp }
     * 
     */
    public Ppp createPpp() {
        return new Ppp();
    }

    /**
     * Create an instance of {@link Pedal }
     * 
     */
    public Pedal createPedal() {
        return new Pedal();
    }

    /**
     * Create an instance of {@link Line }
     * 
     */
    public Line createLine() {
        return new Line();
    }

    /**
     * Create an instance of {@link ScorePartwise }
     * 
     */
    public ScorePartwise createScorePartwise() {
        return new ScorePartwise();
    }

    /**
     * Create an instance of {@link BassStep }
     * 
     */
    public BassStep createBassStep() {
        return new BassStep();
    }

    /**
     * Create an instance of {@link OctaveShift }
     * 
     */
    public OctaveShift createOctaveShift() {
        return new OctaveShift();
    }

    /**
     * Create an instance of {@link RightMargin }
     * 
     */
    public RightMargin createRightMargin() {
        return new RightMargin();
    }

    /**
     * Create an instance of {@link Schleifer }
     * 
     */
    public Schleifer createSchleifer() {
        return new Schleifer();
    }

    /**
     * Create an instance of {@link OtherArticulation }
     * 
     */
    public OtherArticulation createOtherArticulation() {
        return new OtherArticulation();
    }

    /**
     * Create an instance of {@link EncodingDate }
     * 
     */
    public EncodingDate createEncodingDate() {
        return new EncodingDate();
    }

    /**
     * Create an instance of {@link DetachedLegato }
     * 
     */
    public DetachedLegato createDetachedLegato() {
        return new DetachedLegato();
    }

    /**
     * Create an instance of {@link TopSystemDistance }
     * 
     */
    public TopSystemDistance createTopSystemDistance() {
        return new TopSystemDistance();
    }

    /**
     * Create an instance of {@link DampAll }
     * 
     */
    public DampAll createDampAll() {
        return new DampAll();
    }

    /**
     * Create an instance of {@link RootAlter }
     * 
     */
    public RootAlter createRootAlter() {
        return new RootAlter();
    }

    /**
     * Create an instance of {@link MidiUnpitched }
     * 
     */
    public MidiUnpitched createMidiUnpitched() {
        return new MidiUnpitched();
    }

    /**
     * Create an instance of {@link WorkTitle }
     * 
     */
    public WorkTitle createWorkTitle() {
        return new WorkTitle();
    }

    /**
     * Create an instance of {@link FirstFret }
     * 
     */
    public FirstFret createFirstFret() {
        return new FirstFret();
    }

    /**
     * Create an instance of {@link Inversion }
     * 
     */
    public Inversion createInversion() {
        return new Inversion();
    }

    /**
     * Create an instance of {@link Sffz }
     * 
     */
    public Sffz createSffz() {
        return new Sffz();
    }

    /**
     * Create an instance of {@link KeyStep }
     * 
     */
    public KeyStep createKeyStep() {
        return new KeyStep();
    }

    /**
     * Create an instance of {@link Technical }
     * 
     */
    public Technical createTechnical() {
        return new Technical();
    }

    /**
     * Create an instance of {@link BasePitch }
     * 
     */
    public BasePitch createBasePitch() {
        return new BasePitch();
    }

    /**
     * Create an instance of {@link PedalAlter }
     * 
     */
    public PedalAlter createPedalAlter() {
        return new PedalAlter();
    }

    /**
     * Create an instance of {@link Fz }
     * 
     */
    public Fz createFz() {
        return new Fz();
    }

    /**
     * Create an instance of {@link MidiName }
     * 
     */
    public MidiName createMidiName() {
        return new MidiName();
    }

    /**
     * Create an instance of {@link Voice }
     * 
     */
    public Voice createVoice() {
        return new Voice();
    }

    /**
     * Create an instance of {@link Caesura }
     * 
     */
    public Caesura createCaesura() {
        return new Caesura();
    }

    /**
     * Create an instance of {@link Metronome }
     * 
     */
    public Metronome createMetronome() {
        return new Metronome();
    }

    /**
     * Create an instance of {@link TupletNumber }
     * 
     */
    public TupletNumber createTupletNumber() {
        return new TupletNumber();
    }

    /**
     * Create an instance of {@link Miscellaneous }
     * 
     */
    public Miscellaneous createMiscellaneous() {
        return new Miscellaneous();
    }

    /**
     * Create an instance of {@link Tuplet }
     * 
     */
    public Tuplet createTuplet() {
        return new Tuplet();
    }

    /**
     * Create an instance of {@link Encoding }
     * 
     */
    public Encoding createEncoding() {
        return new Encoding();
    }

    /**
     * Create an instance of {@link TopMargin }
     * 
     */
    public TopMargin createTopMargin() {
        return new TopMargin();
    }

    /**
     * Create an instance of {@link NormalNotes }
     * 
     */
    public NormalNotes createNormalNotes() {
        return new NormalNotes();
    }

    /**
     * Create an instance of {@link Bookmark }
     * 
     */
    public Bookmark createBookmark() {
        return new Bookmark();
    }

    /**
     * Create an instance of {@link MidiChannel }
     * 
     */
    public MidiChannel createMidiChannel() {
        return new MidiChannel();
    }

    /**
     * Create an instance of {@link Beats }
     * 
     */
    public Beats createBeats() {
        return new Beats();
    }

    /**
     * Create an instance of {@link Tenuto }
     * 
     */
    public Tenuto createTenuto() {
        return new Tenuto();
    }

    /**
     * Create an instance of {@link PullOff }
     * 
     */
    public PullOff createPullOff() {
        return new PullOff();
    }

    /**
     * Create an instance of {@link Accord }
     * 
     */
    public Accord createAccord() {
        return new Accord();
    }

    /**
     * Create an instance of {@link Arpeggiate }
     * 
     */
    public Arpeggiate createArpeggiate() {
        return new Arpeggiate();
    }

    /**
     * Create an instance of {@link MovementTitle }
     * 
     */
    public MovementTitle createMovementTitle() {
        return new MovementTitle();
    }

    /**
     * Create an instance of {@link MusicFont }
     * 
     */
    public MusicFont createMusicFont() {
        return new MusicFont();
    }

    /**
     * Create an instance of {@link SystemDistance }
     * 
     */
    public SystemDistance createSystemDistance() {
        return new SystemDistance();
    }

    /**
     * Create an instance of {@link DegreeAlter }
     * 
     */
    public DegreeAlter createDegreeAlter() {
        return new DegreeAlter();
    }

    /**
     * Create an instance of {@link NormalType }
     * 
     */
    public NormalType createNormalType() {
        return new NormalType();
    }

    /**
     * Create an instance of {@link Mode }
     * 
     */
    public Mode createMode() {
        return new Mode();
    }

    /**
     * Create an instance of {@link TupletType }
     * 
     */
    public TupletType createTupletType() {
        return new TupletType();
    }

    /**
     * Create an instance of {@link Spiccato }
     * 
     */
    public Spiccato createSpiccato() {
        return new Spiccato();
    }

    /**
     * Create an instance of {@link GroupSymbol }
     * 
     */
    public GroupSymbol createGroupSymbol() {
        return new GroupSymbol();
    }

    /**
     * Create an instance of {@link GroupAbbreviation }
     * 
     */
    public GroupAbbreviation createGroupAbbreviation() {
        return new GroupAbbreviation();
    }

    /**
     * Create an instance of {@link Rights }
     * 
     */
    public Rights createRights() {
        return new Rights();
    }

    /**
     * Create an instance of {@link Staves }
     * 
     */
    public Staves createStaves() {
        return new Staves();
    }

    /**
     * Create an instance of {@link Scordatura }
     * 
     */
    public Scordatura createScordatura() {
        return new Scordatura();
    }

    /**
     * Create an instance of {@link LyricLanguage }
     * 
     */
    public LyricLanguage createLyricLanguage() {
        return new LyricLanguage();
    }

    /**
     * Create an instance of {@link TupletDot }
     * 
     */
    public TupletDot createTupletDot() {
        return new TupletDot();
    }

    /**
     * Create an instance of {@link BendAlter }
     * 
     */
    public BendAlter createBendAlter() {
        return new BendAlter();
    }

    /**
     * Create an instance of {@link Tremolo }
     * 
     */
    public Tremolo createTremolo() {
        return new Tremolo();
    }

    /**
     * Create an instance of {@link MeasureDistance }
     * 
     */
    public MeasureDistance createMeasureDistance() {
        return new MeasureDistance();
    }

    /**
     * Create an instance of {@link MidiInstrument }
     * 
     */
    public MidiInstrument createMidiInstrument() {
        return new MidiInstrument();
    }

    /**
     * Create an instance of {@link BeatUnit }
     * 
     */
    public BeatUnit createBeatUnit() {
        return new BeatUnit();
    }

    /**
     * Create an instance of {@link Fingering }
     * 
     */
    public Fingering createFingering() {
        return new Fingering();
    }

    /**
     * Create an instance of {@link Alter }
     * 
     */
    public Alter createAlter() {
        return new Alter();
    }

    /**
     * Create an instance of {@link Instrument }
     * 
     */
    public Instrument createInstrument() {
        return new Instrument();
    }

    /**
     * Create an instance of {@link Stopped }
     * 
     */
    public Stopped createStopped() {
        return new Stopped();
    }

    /**
     * Create an instance of {@link Function }
     * 
     */
    public Function createFunction() {
        return new Function();
    }

    /**
     * Create an instance of {@link WithBar }
     * 
     */
    public WithBar createWithBar() {
        return new WithBar();
    }

    /**
     * Create an instance of {@link MultipleRest }
     * 
     */
    public MultipleRest createMultipleRest() {
        return new MultipleRest();
    }

    /**
     * Create an instance of {@link Double }
     * 
     */
    public Double createDouble() {
        return new Double();
    }

    /**
     * Create an instance of {@link PerMinute }
     * 
     */
    public PerMinute createPerMinute() {
        return new PerMinute();
    }

    /**
     * Create an instance of {@link BreathMark }
     * 
     */
    public BreathMark createBreathMark() {
        return new BreathMark();
    }

    /**
     * Create an instance of {@link Ppppp }
     * 
     */
    public Ppppp createPpppp() {
        return new Ppppp();
    }

    /**
     * Create an instance of {@link Mp }
     * 
     */
    public Mp createMp() {
        return new Mp();
    }

    /**
     * Create an instance of {@link Slash }
     * 
     */
    public Slash createSlash() {
        return new Slash();
    }

    /**
     * Create an instance of {@link Syllabic }
     * 
     */
    public Syllabic createSyllabic() {
        return new Syllabic();
    }

    /**
     * Create an instance of {@link MiscellaneousField }
     * 
     */
    public MiscellaneousField createMiscellaneousField() {
        return new MiscellaneousField();
    }

    /**
     * Create an instance of {@link Rfz }
     * 
     */
    public Rfz createRfz() {
        return new Rfz();
    }

    /**
     * Create an instance of {@link Feature }
     * 
     */
    public Feature createFeature() {
        return new Feature();
    }

    /**
     * Create an instance of {@link Plop }
     * 
     */
    public Plop createPlop() {
        return new Plop();
    }

    /**
     * Create an instance of {@link CreditWords }
     * 
     */
    public CreditWords createCreditWords() {
        return new CreditWords();
    }

    /**
     * Create an instance of {@link Grace }
     * 
     */
    public Grace createGrace() {
        return new Grace();
    }

    /**
     * Create an instance of {@link SystemMargins }
     * 
     */
    public SystemMargins createSystemMargins() {
        return new SystemMargins();
    }

    /**
     * Create an instance of {@link Forward }
     * 
     */
    public Forward createForward() {
        return new Forward();
    }

    /**
     * Create an instance of {@link Ff }
     * 
     */
    public Ff createFf() {
        return new Ff();
    }

    /**
     * Create an instance of {@link NormalDot }
     * 
     */
    public NormalDot createNormalDot() {
        return new NormalDot();
    }

    /**
     * Create an instance of {@link Step }
     * 
     */
    public Step createStep() {
        return new Step();
    }

    /**
     * Create an instance of {@link StaffLayout }
     * 
     */
    public StaffLayout createStaffLayout() {
        return new StaffLayout();
    }

    /**
     * Create an instance of {@link Coda }
     * 
     */
    public Coda createCoda() {
        return new Coda();
    }

    /**
     * Create an instance of {@link Words }
     * 
     */
    public Words createWords() {
        return new Words();
    }

    /**
     * Create an instance of {@link Grouping }
     * 
     */
    public Grouping createGrouping() {
        return new Grouping();
    }

    /**
     * Create an instance of {@link Falloff }
     * 
     */
    public Falloff createFalloff() {
        return new Falloff();
    }

    /**
     * Create an instance of {@link StaffType }
     * 
     */
    public StaffType createStaffType() {
        return new StaffType();
    }

    /**
     * Create an instance of {@link WordFont }
     * 
     */
    public WordFont createWordFont() {
        return new WordFont();
    }

    /**
     * Create an instance of {@link BeatUnitDot }
     * 
     */
    public BeatUnitDot createBeatUnitDot() {
        return new BeatUnitDot();
    }

    /**
     * Create an instance of {@link Sf }
     * 
     */
    public Sf createSf() {
        return new Sf();
    }

    /**
     * Create an instance of {@link TupletActual }
     * 
     */
    public TupletActual createTupletActual() {
        return new TupletActual();
    }

    /**
     * Create an instance of {@link Text }
     * 
     */
    public Text createText() {
        return new Text();
    }

    /**
     * Create an instance of {@link OtherDirection }
     * 
     */
    public OtherDirection createOtherDirection() {
        return new OtherDirection();
    }

    /**
     * Create an instance of {@link Articulations }
     * 
     */
    public Articulations createArticulations() {
        return new Articulations();
    }

    /**
     * Create an instance of {@link StaffTuning }
     * 
     */
    public StaffTuning createStaffTuning() {
        return new StaffTuning();
    }

    /**
     * Create an instance of {@link DirectionType }
     * 
     */
    public DirectionType createDirectionType() {
        return new DirectionType();
    }

    /**
     * Create an instance of {@link NonArpeggiate }
     * 
     */
    public NonArpeggiate createNonArpeggiate() {
        return new NonArpeggiate();
    }

    /**
     * Create an instance of {@link PageMargins }
     * 
     */
    public PageMargins createPageMargins() {
        return new PageMargins();
    }

    /**
     * Create an instance of {@link Pppp }
     * 
     */
    public Pppp createPppp() {
        return new Pppp();
    }

    /**
     * Create an instance of {@link Sound }
     * 
     */
    public Sound createSound() {
        return new Sound();
    }

    /**
     * Create an instance of {@link Bass }
     * 
     */
    public Bass createBass() {
        return new Bass();
    }

    /**
     * Create an instance of {@link Lyric }
     * 
     */
    public Lyric createLyric() {
        return new Lyric();
    }

    /**
     * Create an instance of {@link Duration }
     * 
     */
    public Duration createDuration() {
        return new Duration();
    }

    /**
     * Create an instance of {@link DoubleTongue }
     * 
     */
    public DoubleTongue createDoubleTongue() {
        return new DoubleTongue();
    }

    /**
     * Create an instance of {@link Direction }
     * 
     */
    public Direction createDirection() {
        return new Direction();
    }

    /**
     * Create an instance of {@link InstrumentName }
     * 
     */
    public InstrumentName createInstrumentName() {
        return new InstrumentName();
    }

    /**
     * Create an instance of {@link Barline }
     * 
     */
    public Barline createBarline() {
        return new Barline();
    }

    /**
     * Create an instance of {@link Fp }
     * 
     */
    public Fp createFp() {
        return new Fp();
    }

    /**
     * Create an instance of {@link PedalStep }
     * 
     */
    public PedalStep createPedalStep() {
        return new PedalStep();
    }

    /**
     * Create an instance of {@link KeyAlter }
     * 
     */
    public KeyAlter createKeyAlter() {
        return new KeyAlter();
    }

    /**
     * Create an instance of {@link Instruments }
     * 
     */
    public Instruments createInstruments() {
        return new Instruments();
    }

    /**
     * Create an instance of {@link OpenString }
     * 
     */
    public OpenString createOpenString() {
        return new OpenString();
    }

    /**
     * Create an instance of {@link EndLine }
     * 
     */
    public EndLine createEndLine() {
        return new EndLine();
    }

    /**
     * Create an instance of {@link FrameNote }
     * 
     */
    public FrameNote createFrameNote() {
        return new FrameNote();
    }

    /**
     * Create an instance of {@link Slide }
     * 
     */
    public Slide createSlide() {
        return new Slide();
    }

    /**
     * Create an instance of {@link Rest }
     * 
     */
    public Rest createRest() {
        return new Rest();
    }

    /**
     * Create an instance of {@link PartGroup }
     * 
     */
    public PartGroup createPartGroup() {
        return new PartGroup();
    }

    /**
     * Create an instance of {@link Key }
     * 
     */
    public Key createKey() {
        return new Key();
    }

    /**
     * Create an instance of {@link FiguredBass }
     * 
     */
    public FiguredBass createFiguredBass() {
        return new FiguredBass();
    }

    /**
     * Create an instance of {@link Laughing }
     * 
     */
    public Laughing createLaughing() {
        return new Laughing();
    }

    /**
     * Create an instance of {@link Slur }
     * 
     */
    public Slur createSlur() {
        return new Slur();
    }

    /**
     * Create an instance of {@link Backup }
     * 
     */
    public Backup createBackup() {
        return new Backup();
    }

    /**
     * Create an instance of {@link Rf }
     * 
     */
    public Rf createRf() {
        return new Rf();
    }

    /**
     * Create an instance of {@link DisplayOctave }
     * 
     */
    public DisplayOctave createDisplayOctave() {
        return new DisplayOctave();
    }

    /**
     * Create an instance of {@link Bracket }
     * 
     */
    public Bracket createBracket() {
        return new Bracket();
    }

    /**
     * Create an instance of {@link MeasureStyle }
     * 
     */
    public MeasureStyle createMeasureStyle() {
        return new MeasureStyle();
    }

    /**
     * Create an instance of {@link Mordent }
     * 
     */
    public Mordent createMordent() {
        return new Mordent();
    }

    /**
     * Create an instance of {@link Unpitched }
     * 
     */
    public Unpitched createUnpitched() {
        return new Unpitched();
    }

    /**
     * Create an instance of {@link Millimeters }
     * 
     */
    public Millimeters createMillimeters() {
        return new Millimeters();
    }

    /**
     * Create an instance of {@link TuningOctave }
     * 
     */
    public TuningOctave createTuningOctave() {
        return new TuningOctave();
    }

    /**
     * Create an instance of {@link Fff }
     * 
     */
    public Fff createFff() {
        return new Fff();
    }

    /**
     * Create an instance of {@link Frame }
     * 
     */
    public Frame createFrame() {
        return new Frame();
    }

    /**
     * Create an instance of {@link Tap }
     * 
     */
    public Tap createTap() {
        return new Tap();
    }

    /**
     * Create an instance of {@link StaffDistance }
     * 
     */
    public StaffDistance createStaffDistance() {
        return new StaffDistance();
    }

    /**
     * Create an instance of {@link Staccatissimo }
     * 
     */
    public Staccatissimo createStaccatissimo() {
        return new Staccatissimo();
    }

    /**
     * Create an instance of {@link P }
     * 
     */
    public P createP() {
        return new P();
    }

    /**
     * Create an instance of {@link MeasureRepeat }
     * 
     */
    public MeasureRepeat createMeasureRepeat() {
        return new MeasureRepeat();
    }

    /**
     * Create an instance of {@link Figure }
     * 
     */
    public Figure createFigure() {
        return new Figure();
    }

    /**
     * Create an instance of {@link StrongAccent }
     * 
     */
    public StrongAccent createStrongAccent() {
        return new StrongAccent();
    }

    /**
     * Create an instance of {@link Beam }
     * 
     */
    public Beam createBeam() {
        return new Beam();
    }

    /**
     * Create an instance of {@link Eyeglasses }
     * 
     */
    public Eyeglasses createEyeglasses() {
        return new Eyeglasses();
    }

    /**
     * Create an instance of {@link Staff }
     * 
     */
    public Staff createStaff() {
        return new Staff();
    }

    /**
     * Create an instance of {@link Cue }
     * 
     */
    public Cue createCue() {
        return new Cue();
    }

    /**
     * Create an instance of {@link Divisions }
     * 
     */
    public Divisions createDivisions() {
        return new Divisions();
    }

    /**
     * Create an instance of {@link String }
     * 
     */
    public String createString() {
        return new String();
    }

    /**
     * Create an instance of {@link BeatRepeat }
     * 
     */
    public BeatRepeat createBeatRepeat() {
        return new BeatRepeat();
    }

    /**
     * Create an instance of {@link RootStep }
     * 
     */
    public RootStep createRootStep() {
        return new RootStep();
    }

    /**
     * Create an instance of {@link PageWidth }
     * 
     */
    public PageWidth createPageWidth() {
        return new PageWidth();
    }

    /**
     * Create an instance of {@link StaffDetails }
     * 
     */
    public StaffDetails createStaffDetails() {
        return new StaffDetails();
    }

    /**
     * Create an instance of {@link TuningStep }
     * 
     */
    public TuningStep createTuningStep() {
        return new TuningStep();
    }

    /**
     * Create an instance of {@link Pp }
     * 
     */
    public Pp createPp() {
        return new Pp();
    }

    /**
     * Create an instance of {@link Chromatic }
     * 
     */
    public Chromatic createChromatic() {
        return new Chromatic();
    }

    /**
     * Create an instance of {@link GroupBarline }
     * 
     */
    public GroupBarline createGroupBarline() {
        return new GroupBarline();
    }

    /**
     * Create an instance of {@link Fret }
     * 
     */
    public Fret createFret() {
        return new Fret();
    }

    /**
     * Create an instance of {@link Link }
     * 
     */
    public Link createLink() {
        return new Link();
    }

    /**
     * Create an instance of {@link PageLayout }
     * 
     */
    public PageLayout createPageLayout() {
        return new PageLayout();
    }

    /**
     * Create an instance of {@link Note }
     * 
     */
    public Note createNote() {
        return new Note();
    }

    /**
     * Create an instance of {@link Ffff }
     * 
     */
    public Ffff createFfff() {
        return new Ffff();
    }

    /**
     * Create an instance of {@link PartList }
     * 
     */
    public PartList createPartList() {
        return new PartList();
    }

    /**
     * Create an instance of {@link Rehearsal }
     * 
     */
    public Rehearsal createRehearsal() {
        return new Rehearsal();
    }

    /**
     * Create an instance of {@link SenzaMisura }
     * 
     */
    public SenzaMisura createSenzaMisura() {
        return new SenzaMisura();
    }

    /**
     * Create an instance of {@link LyricFont }
     * 
     */
    public LyricFont createLyricFont() {
        return new LyricFont();
    }

    /**
     * Create an instance of {@link Sfp }
     * 
     */
    public Sfp createSfp() {
        return new Sfp();
    }

    /**
     * Create an instance of {@link Fermata }
     * 
     */
    public Fermata createFermata() {
        return new Fermata();
    }

    /**
     * Create an instance of {@link WorkNumber }
     * 
     */
    public WorkNumber createWorkNumber() {
        return new WorkNumber();
    }

    /**
     * Create an instance of {@link PageHeight }
     * 
     */
    public PageHeight createPageHeight() {
        return new PageHeight();
    }

    /**
     * Create an instance of {@link Measure }
     * 
     */
    public Measure createMeasure() {
        return new Measure();
    }

    /**
     * Create an instance of {@link ScoreInstrument }
     * 
     */
    public ScoreInstrument createScoreInstrument() {
        return new ScoreInstrument();
    }

    /**
     * Create an instance of {@link Prefix }
     * 
     */
    public Prefix createPrefix() {
        return new Prefix();
    }

    /**
     * Create an instance of {@link Scaling }
     * 
     */
    public Scaling createScaling() {
        return new Scaling();
    }

    /**
     * Create an instance of {@link FigureNumber }
     * 
     */
    public FigureNumber createFigureNumber() {
        return new FigureNumber();
    }

    /**
     * Create an instance of {@link MovementNumber }
     * 
     */
    public MovementNumber createMovementNumber() {
        return new MovementNumber();
    }

    /**
     * Create an instance of {@link TrillMark }
     * 
     */
    public TrillMark createTrillMark() {
        return new TrillMark();
    }

    /**
     * Create an instance of {@link TuningAlter }
     * 
     */
    public TuningAlter createTuningAlter() {
        return new TuningAlter();
    }

    /**
     * Create an instance of {@link OtherDynamics }
     * 
     */
    public OtherDynamics createOtherDynamics() {
        return new OtherDynamics();
    }

    /**
     * Create an instance of {@link Ending }
     * 
     */
    public Ending createEnding() {
        return new Ending();
    }

    /**
     * Create an instance of {@link Capo }
     * 
     */
    public Capo createCapo() {
        return new Capo();
    }

    /**
     * Create an instance of {@link Work }
     * 
     */
    public Work createWork() {
        return new Work();
    }

    /**
     * Create an instance of {@link Extend }
     * 
     */
    public Extend createExtend() {
        return new Extend();
    }

    /**
     * Create an instance of {@link Accent }
     * 
     */
    public Accent createAccent() {
        return new Accent();
    }

    /**
     * Create an instance of {@link ThumbPosition }
     * 
     */
    public ThumbPosition createThumbPosition() {
        return new ThumbPosition();
    }

    /**
     * Create an instance of {@link Glissando }
     * 
     */
    public Glissando createGlissando() {
        return new Glissando();
    }

    /**
     * Create an instance of {@link Doit }
     * 
     */
    public Doit createDoit() {
        return new Doit();
    }

    /**
     * Create an instance of {@link PreBend }
     * 
     */
    public PreBend createPreBend() {
        return new PreBend();
    }

    /**
     * Create an instance of {@link MidiDevice }
     * 
     */
    public MidiDevice createMidiDevice() {
        return new MidiDevice();
    }

    /**
     * Create an instance of {@link WavyLine }
     * 
     */
    public WavyLine createWavyLine() {
        return new WavyLine();
    }

    /**
     * Create an instance of {@link Octave }
     * 
     */
    public Octave createOctave() {
        return new Octave();
    }

    /**
     * Create an instance of {@link Tied }
     * 
     */
    public Tied createTied() {
        return new Tied();
    }

    /**
     * Create an instance of {@link Heel }
     * 
     */
    public Heel createHeel() {
        return new Heel();
    }

    /**
     * Create an instance of {@link Diatonic }
     * 
     */
    public Diatonic createDiatonic() {
        return new Diatonic();
    }

    /**
     * Create an instance of {@link DisplayStep }
     * 
     */
    public DisplayStep createDisplayStep() {
        return new DisplayStep();
    }

    /**
     * Create an instance of {@link Type }
     * 
     */
    public Type createType() {
        return new Type();
    }

    /**
     * Create an instance of {@link Notehead }
     * 
     */
    public Notehead createNotehead() {
        return new Notehead();
    }

    /**
     * Create an instance of {@link Turn }
     * 
     */
    public Turn createTurn() {
        return new Turn();
    }

    /**
     * Create an instance of {@link OctaveChange }
     * 
     */
    public OctaveChange createOctaveChange() {
        return new OctaveChange();
    }

    /**
     * Create an instance of {@link Elision }
     * 
     */
    public Elision createElision() {
        return new Elision();
    }

    /**
     * Create an instance of {@link ClefOctaveChange }
     * 
     */
    public ClefOctaveChange createClefOctaveChange() {
        return new ClefOctaveChange();
    }

    /**
     * Create an instance of {@link Sfz }
     * 
     */
    public Sfz createSfz() {
        return new Sfz();
    }

    /**
     * Create an instance of {@link StaffSize }
     * 
     */
    public StaffSize createStaffSize() {
        return new StaffSize();
    }

    /**
     * Create an instance of {@link Cancel }
     * 
     */
    public Cancel createCancel() {
        return new Cancel();
    }

    /**
     * Create an instance of {@link Group }
     * 
     */
    public Group createGroup() {
        return new Group();
    }

    /**
     * Create an instance of {@link FrameStrings }
     * 
     */
    public FrameStrings createFrameStrings() {
        return new FrameStrings();
    }

    /**
     * Create an instance of {@link Dot }
     * 
     */
    public Dot createDot() {
        return new Dot();
    }

    /**
     * Create an instance of {@link Segno }
     * 
     */
    public Segno createSegno() {
        return new Segno();
    }

    /**
     * Create an instance of {@link Encoder }
     * 
     */
    public Encoder createEncoder() {
        return new Encoder();
    }

    /**
     * Create an instance of {@link InvertedMordent }
     * 
     */
    public InvertedMordent createInvertedMordent() {
        return new InvertedMordent();
    }

    /**
     * Create an instance of {@link Stem }
     * 
     */
    public Stem createStem() {
        return new Stem();
    }

    /**
     * Create an instance of {@link MidiBank }
     * 
     */
    public MidiBank createMidiBank() {
        return new MidiBank();
    }

    /**
     * Create an instance of {@link OtherTechnical }
     * 
     */
    public OtherTechnical createOtherTechnical() {
        return new OtherTechnical();
    }

    /**
     * Create an instance of {@link BarStyle }
     * 
     */
    public BarStyle createBarStyle() {
        return new BarStyle();
    }

    /**
     * Create an instance of {@link Dynamics }
     * 
     */
    public Dynamics createDynamics() {
        return new Dynamics();
    }

    /**
     * Create an instance of {@link TimeModification }
     * 
     */
    public TimeModification createTimeModification() {
        return new TimeModification();
    }

    /**
     * Create an instance of {@link Dashes }
     * 
     */
    public Dashes createDashes() {
        return new Dashes();
    }

    /**
     * Create an instance of {@link Offset }
     * 
     */
    public Offset createOffset() {
        return new Offset();
    }

    /**
     * Create an instance of {@link Creator }
     * 
     */
    public Creator createCreator() {
        return new Creator();
    }

    /**
     * Create an instance of {@link DownBow }
     * 
     */
    public DownBow createDownBow() {
        return new DownBow();
    }

    /**
     * Create an instance of {@link AccidentalMark }
     * 
     */
    public AccidentalMark createAccidentalMark() {
        return new AccidentalMark();
    }

    /**
     * Create an instance of {@link StaffLines }
     * 
     */
    public StaffLines createStaffLines() {
        return new StaffLines();
    }

    /**
     * Create an instance of {@link Toe }
     * 
     */
    public Toe createToe() {
        return new Toe();
    }

    /**
     * Create an instance of {@link Barre }
     * 
     */
    public Barre createBarre() {
        return new Barre();
    }

    /**
     * Create an instance of {@link Pluck }
     * 
     */
    public Pluck createPluck() {
        return new Pluck();
    }

    /**
     * Create an instance of {@link Clef }
     * 
     */
    public Clef createClef() {
        return new Clef();
    }

    /**
     * Create an instance of {@link Ffffff }
     * 
     */
    public Ffffff createFfffff() {
        return new Ffffff();
    }

    /**
     * Create an instance of {@link Mf }
     * 
     */
    public Mf createMf() {
        return new Mf();
    }

    /**
     * Create an instance of {@link MeasureLayout }
     * 
     */
    public MeasureLayout createMeasureLayout() {
        return new MeasureLayout();
    }

    /**
     * Create an instance of {@link Directive }
     * 
     */
    public Directive createDirective() {
        return new Directive();
    }

    /**
     * Create an instance of {@link Tenths }
     * 
     */
    public Tenths createTenths() {
        return new Tenths();
    }

    /**
     * Create an instance of {@link Credit }
     * 
     */
    public Credit createCredit() {
        return new Credit();
    }

    /**
     * Create an instance of {@link HarpPedals }
     * 
     */
    public HarpPedals createHarpPedals() {
        return new HarpPedals();
    }

    /**
     * Create an instance of {@link Degree }
     * 
     */
    public Degree createDegree() {
        return new Degree();
    }

    /**
     * Create an instance of {@link Supports }
     * 
     */
    public Supports createSupports() {
        return new Supports();
    }

    /**
     * Create an instance of {@link DegreeValue }
     * 
     */
    public DegreeValue createDegreeValue() {
        return new DegreeValue();
    }

    /**
     * Create an instance of {@link Release }
     * 
     */
    public Release createRelease() {
        return new Release();
    }

    /**
     * Create an instance of {@link MidiProgram }
     * 
     */
    public MidiProgram createMidiProgram() {
        return new MidiProgram();
    }

    /**
     * Create an instance of {@link SystemLayout }
     * 
     */
    public SystemLayout createSystemLayout() {
        return new SystemLayout();
    }

    /**
     * Create an instance of {@link BeatType }
     * 
     */
    public BeatType createBeatType() {
        return new BeatType();
    }

    /**
     * Create an instance of {@link GroupName }
     * 
     */
    public GroupName createGroupName() {
        return new GroupName();
    }

    /**
     * Create an instance of {@link PartAbbreviation }
     * 
     */
    public PartAbbreviation createPartAbbreviation() {
        return new PartAbbreviation();
    }

    /**
     * Create an instance of {@link Tie }
     * 
     */
    public Tie createTie() {
        return new Tie();
    }

    /**
     * Create an instance of {@link Time }
     * 
     */
    public Time createTime() {
        return new Time();
    }

    /**
     * Create an instance of {@link Identification }
     * 
     */
    public Identification createIdentification() {
        return new Identification();
    }

    /**
     * Create an instance of {@link TripleTongue }
     * 
     */
    public TripleTongue createTripleTongue() {
        return new TripleTongue();
    }

    /**
     * Create an instance of {@link Print }
     * 
     */
    public Print createPrint() {
        return new Print();
    }

    /**
     * Create an instance of {@link Root }
     * 
     */
    public Root createRoot() {
        return new Root();
    }

    /**
     * Create an instance of {@link DegreeType }
     * 
     */
    public DegreeType createDegreeType() {
        return new DegreeType();
    }

    /**
     * Create an instance of {@link BottomMargin }
     * 
     */
    public BottomMargin createBottomMargin() {
        return new BottomMargin();
    }

    /**
     * Create an instance of {@link HammerOn }
     * 
     */
    public HammerOn createHammerOn() {
        return new HammerOn();
    }

    /**
     * Create an instance of {@link Defaults }
     * 
     */
    public Defaults createDefaults() {
        return new Defaults();
    }

    /**
     * Create an instance of {@link BassAlter }
     * 
     */
    public BassAlter createBassAlter() {
        return new BassAlter();
    }

    /**
     * Create an instance of {@link EndParagraph }
     * 
     */
    public EndParagraph createEndParagraph() {
        return new EndParagraph();
    }

    /**
     * Create an instance of {@link OtherOrnament }
     * 
     */
    public OtherOrnament createOtherOrnament() {
        return new OtherOrnament();
    }

    /**
     * Create an instance of {@link F }
     * 
     */
    public F createF() {
        return new F();
    }

    /**
     * Create an instance of {@link Bend }
     * 
     */
    public Bend createBend() {
        return new Bend();
    }

    /**
     * Create an instance of {@link Notations }
     * 
     */
    public Notations createNotations() {
        return new Notations();
    }

    /**
     * Create an instance of {@link FrameFrets }
     * 
     */
    public FrameFrets createFrameFrets() {
        return new FrameFrets();
    }

    /**
     * Create an instance of {@link Staccato }
     * 
     */
    public Staccato createStaccato() {
        return new Staccato();
    }

    /**
     * Create an instance of {@link OtherNotation }
     * 
     */
    public OtherNotation createOtherNotation() {
        return new OtherNotation();
    }

    /**
     * Create an instance of {@link Fingernails }
     * 
     */
    public Fingernails createFingernails() {
        return new Fingernails();
    }

    /**
     * Create an instance of {@link TupletNormal }
     * 
     */
    public TupletNormal createTupletNormal() {
        return new TupletNormal();
    }

    /**
     * Create an instance of {@link Natural }
     * 
     */
    public Natural createNatural() {
        return new Natural();
    }

    /**
     * Create an instance of {@link Level }
     * 
     */
    public Level createLevel() {
        return new Level();
    }

    /**
     * Create an instance of {@link Artificial }
     * 
     */
    public Artificial createArtificial() {
        return new Artificial();
    }

    /**
     * Create an instance of {@link ActualNotes }
     * 
     */
    public ActualNotes createActualNotes() {
        return new ActualNotes();
    }

    /**
     * Create an instance of {@link Kind }
     * 
     */
    public Kind createKind() {
        return new Kind();
    }

    /**
     * Create an instance of {@link LeftMargin }
     * 
     */
    public LeftMargin createLeftMargin() {
        return new LeftMargin();
    }

    /**
     * Create an instance of {@link Scoop }
     * 
     */
    public Scoop createScoop() {
        return new Scoop();
    }

    /**
     * Create an instance of {@link Repeat }
     * 
     */
    public Repeat createRepeat() {
        return new Repeat();
    }

    /**
     * Create an instance of {@link Chord }
     * 
     */
    public Chord createChord() {
        return new Chord();
    }

    /**
     * Create an instance of {@link EncodingDescription }
     * 
     */
    public EncodingDescription createEncodingDescription() {
        return new EncodingDescription();
    }

    /**
     * Create an instance of {@link Damp }
     * 
     */
    public Damp createDamp() {
        return new Damp();
    }

    /**
     * Create an instance of {@link SoundingPitch }
     * 
     */
    public SoundingPitch createSoundingPitch() {
        return new SoundingPitch();
    }

    /**
     * Create an instance of {@link ScorePart }
     * 
     */
    public ScorePart createScorePart() {
        return new ScorePart();
    }

    /**
     * Create an instance of {@link Sign }
     * 
     */
    public Sign createSign() {
        return new Sign();
    }

    /**
     * Create an instance of {@link UpBow }
     * 
     */
    public UpBow createUpBow() {
        return new UpBow();
    }

    /**
     * Create an instance of {@link PedalTuning }
     * 
     */
    public PedalTuning createPedalTuning() {
        return new PedalTuning();
    }

    /**
     * Create an instance of {@link Pitch }
     * 
     */
    public Pitch createPitch() {
        return new Pitch();
    }

    /**
     * Create an instance of {@link Source }
     * 
     */
    public Source createSource() {
        return new Source();
    }

    /**
     * Create an instance of {@link Humming }
     * 
     */
    public Humming createHumming() {
        return new Humming();
    }

    /**
     * Create an instance of {@link Part }
     * 
     */
    public Part createPart() {
        return new Part();
    }

    /**
     * Create an instance of {@link TouchingPitch }
     * 
     */
    public TouchingPitch createTouchingPitch() {
        return new TouchingPitch();
    }

}
