<!-- +=====================================================================+ -->
<!-- |                                                                     | -->
<!-- |                  b u i l d - e p i l o g . x m l                    | -->
<!-- |                                                                     | -->
<!-- | abstract: Common elements of ant build for proxymusic project       | -->
<!-- | location: ${basedir}/src/build-epilog.xml                           | -->
<!-- | author:   herve.bitteur@laposte.net                                 | -->
<!-- |                                                                     | -->
<!-- +=====================================================================+ -->

<project name="proxymusic-epilog" basedir="..">
    
    <description>
	This project gathers all the targets that are common to NetBeans and
	Emacs/Ant building tasks.
	
        $Id$
    </description>
    
    <!-- Tools classpath, needs JAXB RI -->
    <!--
     <path id="tools.classpath">
 	<fileset dir="${jaxb.dir}/lib" includes="*.jar"/>
     </path>
	 -->
    
    <!-- JAXB Java-to-Schema task definition, needs JAXB RI -->
    <!--
     <taskdef name="schemagen"
 	     classname="com.sun.tools.jxc.SchemaGenTask">
 	<classpath>
 	    <fileset dir="${jaxb.dir}/lib" includes="*.jar" />
 	</classpath>
     </taskdef>
	 -->
    
    <!-- JAXB Schema-to-Java task definition, needs JAXB RI -->
    <!--
     <taskdef name="xjc"
 	     classname="com.sun.tools.xjc.XJCTask">
 	<classpath>
 	    <fileset dir="${jaxb.dir}/lib" includes="*.jar" />
 	</classpath>
     </taskdef>
	 -->
    
    <!-- =============================== -->
    <!--  - C L E A N - G E N - J A V A  -->
    <!-- =============================== -->
    <target name="-clean-gen-java">
	<!-- description="Remove all *generated* java classes." -->
        <delete verbose="${verbose}">
	    <fileset dir="${src.dir}/proxymusic" includes="*.java"/>
        </delete>
    </target>
    
    <!-- ========================= -->
    <!--  - C L E A N - B U I L D  -->
    <!-- ========================= -->
    <target name="-clean-build">
	<!-- description="Remove the /build folder." -->
        <delete dir="${build.dir}"/>
    </target>
    
    <!-- ===================== -->
    <!--  P R O P E R T I E S  -->
    <!-- ===================== -->
    <target name="properties">
        <echoproperties/>
    </target>
    
    <!-- ======= -->
    <!--  X J C  -->
    <!-- ======= -->
    <target name="xjc">
	<echo message="-- Generating Java classes from Schema ..." />
	<mkdir dir="${src.dir}" />

	<!-- Using ant task (this needs JAXB RI) -->
	<!--
  	<xjc
	    schema="${schema.dir}/xsd/musicxml.fixed.xsd"
	    package="proxymusic"
	    destdir="${src.dir}"
	    header="true"
	    extension="true"
	    binding="${schema.dir}/custom.xjb"
	    >
   	    <produces dir="${src.dir}/proxymusic" includes="*.java" />
  	    <classpath refid="tools.classpath" />
  	</xjc>
	     -->

	<!-- Not using ant task (no need for JAXB RI)-->
   	<exec executable="${java.home}/../bin/xjc.exe">
<!--   	<exec executable="${jaxb.dir}/bin/xjc.bat"> -->
 	    <arg line="-verbose"/>
 	    <arg line="-p proxymusic"/>
 	    <arg line="-d ${src.dir}"/>
<!--  	    <arg line="-no-header"/> -->
<!--   	    <arg line="-extension"/>  -->
    	    <arg line="-b ${schema.dir}/custom.xjb"/>
 	    <arg line="${schema.dir}/xsd/musicxml.fixed.xsd"/>
 	</exec>
    </target>

    <!-- ================= -->
    <!--  - D O C - J A R  -->
    <!-- ================= -->
    <target name="-doc-jar">
        <mkdir dir="${dist.dir}"/>
        <jar basedir="${dist.javadoc.dir}"
	     jarfile="${dist.doc.jar}">
        </jar>
    </target>
    
    <!-- ================= -->
    <!--  - S R C - J A R  -->
    <!-- ================= -->
    <target name="-src-jar">
        <mkdir dir="${dist.dir}"/>
        <jar basedir="${src.dir}"
	     jarfile="${dist.src.jar}">
        </jar>
    </target>
    
    <!-- ========= -->
    <!--  P A C K  -->
    <!-- ========= -->
    <target name="pack"
	    depends="init"
	    description="Pack up the whole project">
	
        <delete verbose="${verbose}">
	    <fileset file="${pack.zip}"/>
        </delete>

	<zip destfile="${pack.zip}"
	     excludes="${dist.excludes}">
	    <fileset dir="${basedir}" includes="build.netbeans.xml" />
	    <fileset dir="${basedir}" includes="schema*/**" />
	    <fileset dir="${basedir}" includes="src/**" />
	    <fileset dir="${basedir}" includes="www/**" />
	    <fileset dir="${basedir}" includes="build/**" />
	    <fileset dir="${basedir}" includes="dist/**" />
	</zip>

    </target>
    
    <!-- ========= -->
    <!--  C O R E  -->
    <!-- ========= -->
    <target name="core"
	    depends="init"
	    description="Pack only the core of the project">
	
        <delete verbose="${verbose}">
	    <fileset file="${core.zip}"/>
        </delete>

	<zip destfile="${core.zip}"
	     excludes="${dist.excludes}">
	    <fileset dir="${basedir}" includes="build.netbeans.xml" />
	    <fileset dir="${basedir}" includes="schema*/**" />
	    <fileset dir="${basedir}" includes="src/**"
		     excludes="src/main/proxymusic/*.java" />
	    <fileset dir="${basedir}" includes="www/**" />
	</zip>

    </target>

    <!-- ========= -->
    <!--  T E S T  -->
    <!-- ========= -->
    <target name="test">

	<echo message="Compiling ${test.name} ..."/>
	<mkdir dir="${build.dir}/test/classes" />
        <javac
            target    = "${javac.target}"
	    classpath = "${junit.jar};${dist.jar}"
            destdir   = "${build.dir}/test/classes"
            srcdir    = "${test.src.dir}">
	    <include name="proxymusic/util/${test.name}.java" />
	</javac>

	<echo message="Testing ${test.name} ..."/>
	<java
            fork="true"
	    dir="${basedir}"
	    classname="proxymusic.util.${test.name}">
	    <classpath>
		<pathelement path="${dist.jar}"/>
		<pathelement path="${build.dir}/test/classes"/>
		<pathelement path="${junit.jar}"/>
	    </classpath>
	</java>
    </target>
    
    <!-- ================= -->
    <!--  T E S T - A L L  -->
    <!-- ================= -->
    <target name="test-all"
            description="Run all defined tests">
	
 	<antcall target="test">
 	    <param name="test.name" value="HelloWorld"/>
 	</antcall>

 	<antcall target="test">
 	    <param name="test.name" value="ScorePartTest"/>
 	</antcall>

    </target>
    
    <!-- =============== -->
    <!--  V E R S I O N  -->
    <!-- =============== -->
    <target name="version"
	    description="Print the configured version parameters">

	<echo message="spec.version = ${spec.version}" />
	<echo message="impl.version = ${impl.version}" />
	<echo message="jaxb.version = ${jaxb.version}" />
		       
    </target>
    
</project>

